## Remove primers from sequences


rule cutadapt_trim_paired_for_DADA2:
    conda:
        "../../envs/cutadapt.yml"
    container:
        singularity_envs["cutadapt"]
    input:
        R1_raw_reads="raw_reads/{sample}_R1.fastq.gz",
        R2_raw_reads="raw_reads/{sample}_R2.fastq.gz",
    output:
        R1_trimmed_reads=temp(
            "{denoiser}/1a_trimmed_primers/{sample}_trimmed_R1.fastq.gz"
        ),
        R2_trimmed_reads=temp(
            "{denoiser}/1a_trimmed_primers/{sample}_trimmed_R2.fastq.gz"
        ),
    log:
        logging_folder + "{denoiser}/1a_trimmed_primers/{sample}_trimmed_paired.txt",
    params:
        amplicon_type=config["ITS_or_16S"],
        forward_primer=config["forward_primer"],
        reverse_primer=config["reverse_primer"],
    threads: 1
    script:
        "scripts/1_cutadapt_paired.py"


rule cutadapt_trim_single_for_DADA2:
    conda:
        "../../envs/cutadapt.yml"
    container:
        singularity_envs["cutadapt"]
    input:
        R1_raw_reads="raw_reads/{sample}_single.fastq.gz",
    output:
        R1_trimmed_reads=temp(
            "{denoiser}/1a_trimmed_primers/{sample}_trimmed_single.fastq.gz"
        ),
    log:
        logging_folder + "{denoiser}/1a_trimmed_primers/{sample}_trimmed_single.txt",
    params:
        amplicon_type=config["ITS_or_16S"],
        forward_primer=config["forward_primer"],
        reverse_primer=config["reverse_primer"],
    threads: 1
    script:
        "scripts/1_cutadapt_single.py"
