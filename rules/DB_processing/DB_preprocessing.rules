##  Recommedned rules to preprocess the reference taxonomy database to keep only the region of the gene considered by the
# used primers. Can be skipped by "extract_and_merge" = False parameters in config file.


rule Extract_amplicons_cutadapt:
    conda:
        "../../envs/cutadapt.yml"
    container:
        singularity_envs["cutadapt"]
    input:
        "{prefix}/master/original_seqs.fasta",
    output:
        "{prefix}/QIIME/dna-sequences.fasta",
    params:
        forward_primer=config["forward_primer"],
        reverse_primer=config["reverse_primer"],
        excepted_errors=config["excepted_errors"],
        min_length=config["amplicon_min_length"],
        max_length=config["amplicon_max_length"],
        coverage=config["amplicon_min_coverage"],
    log:
        "{prefix}/logs/QIIME/DB_cutadapt.txt",
    threads: 1
    script:
        "scripts/cutadapt_DB.py"


rule Dereplicate_amplicons:
    conda:
        "../../envs/vsearch.yml"
    container:
        singularity_envs["vsearch"]
    input:
        "{prefix}/QIIME/dna-sequences.fasta",
    output:
        fasta="{prefix}/QIIME/DB_amp.fasta",
        uc="{prefix}/QIIME/DB_amp.uc",
    log:
        "{prefix}/logs/QIIME/vsearch_dereplicate_ampli.log",
    threads: 1
    shell:
        """
        vsearch \
        --derep_fulllength {input} \
        --output {output[fasta]} \
        --uc {output[uc]} \
        2> {log}
        """


# rule Derep_and_merge_taxonomy:
#     conda:
#         "../../envs/amplicons_r_utils.yml"
#     container:
#         singularity_envs["r_utils"]
#     input:
#         tax="{prefix}/master/original_tax.txt",
#         uc="{prefix}/QIIME/DB_amp.uc",
#     output:
#         formatted_tax="{prefix}/QIIME/DB_amp_taxonomy.txt",
#         all="{prefix}/QIIME/DB_amp_all_taxonomy.txt",
#         problematic="{prefix}/QIIME/problematic_taxa.txt",
#     log:
#         "{prefix}/logs/QIIME/derep_and_merge.log",
#     params:
#         numbers_species=config["numbers_species"],
#         numbers_genus=config["numbers_genus"],
#     threads: 1
#     script:
#         "scripts/DB_tax_formatting.R"

rule Derep_and_merge_taxonomy:
    conda:
        "../../envs/pandas.yml"
    container:
        singularity_envs["pandas"]
    input:
        tax="{prefix}/master/original_tax.txt",
        uc="{prefix}/QIIME/DB_amp.uc",
    output:
        formatted_tax="{prefix}/QIIME/DB_amp_taxonomy.txt",
        all="{prefix}/QIIME/DB_amp_all_taxonomy.txt",
        problematic="{prefix}/QIIME/problematic_taxa.txt",
    log:
        "{prefix}/logs/QIIME/derep_and_merge.log",
    params:
        numbers_species=config["numbers_species"],
        numbers_genus=config["numbers_genus"],
    threads: 1
    script:
        "scripts/tax_formatting.py"


rule Hash_derep_tax:
    input:
        formatted_tax="{prefix}/QIIME/DB_amp_taxonomy.txt",
        all="{prefix}/QIIME/DB_amp_all_taxonomy.txt",
        problematic="{prefix}/QIIME/problematic_taxa.txt",
        fasta="{prefix}/QIIME/DB_amp.fasta",
    output:
        hash="{prefix}/QIIME/DB_formatted.hash",
    threads: 1
    shell:
        """
        md5sum {input.formatted_tax} {input.all} {input.problematic} {input.fasta} | sort -k 2 | md5sum | cut -f 1 -d " " > {output}
        """
