
## Get local reads.

rule copy_fastq_paired_from_link:
    input:
        unpack(lambda wildcards: paths[wildcards.sample])
    output:
        temp("raw_reads/{sample}_R1.fastq.gz"),
        temp("raw_reads/{sample}_R2.fastq.gz")
    resources:
        max_copy=1
    shell:
        """
        if gzip -t {input[0]}
        then
            cp {input[0]} {output[0]}
        else 
            cp {input[0]} $(dirname {output[0]})    
            gzip -qc $(dirname "{output[0]}")/$(basename "{input[0]}") > {output[0]}
            rm $(dirname "{output[0]}")/$(basename "{input[0]}")
        fi

        if gzip -t {input[1]}
        then
            cp {input[1]} {output[1]}
        else 
            cp {input[1]} $(dirname {output[1]})
            gzip -qc $(dirname "{output[1]}")/$(basename "{input[1]}") > {output[1]}
            rm $(dirname "{output[1]}")/$(basename "{input[1]}")
        fi            

        """


rule copy_fastq_single_from_link:
    input:
        unpack(lambda wildcards: paths[wildcards.sample])
    output:
        temp("raw_reads/{sample}_single.fastq.gz")
    resources:
        max_copy=1
    shell:
        """
        if gzip -t {input[0]}
        then
            cp {input[0]} {output[0]}
        else 
            cp {input[0]} $(dirname {output[0]})
            gzip -qc $(dirname "{output[0]}")/$(basename "{input[0]}") > {output[0]}
            rm $(dirname "{output[0]}")/$(basename "{input[0]}")
        fi
        """
        
        
## Alternatively, obtain reads from SRA. 


rule download_sra:
    conda:
        "../../envs/sra-tools.yml"
    container:
        singularity_envs["sra-toolkit"]
    output:
        # /home/pipeline_user/ncbi/public
        temp("ncbi/public/sra/{sample}/{sample}.sra"),
    log:
        logging_folder + "samples/{sample}/sras/dump.txt"
    params:
        sra_dir = "$HOME/ncbi/public"
    resources:
        max_copy=1
    shell:
        """
        #cache_dir=$(vdb-config --cfg -o n | grep "/repository/user/main/public/root" | cut -f2 -d'=' | sed "s/\\"//g")
        vdb-config --restore-defaults
        prefetch -v {wildcards.sample} -O "ncbi/public/sra/"  --max-size 100000000 &> {log}
        """

rule sra_convert_to_fastq_paired:
    conda:
        "../../envs/sra-tools.yml"
    container:
        singularity_envs["sra-toolkit"]
    input:
        "ncbi/public/sra/{sample}/{sample}.sra",
    output:
        temp(link_directory + "{sample,[A-Za-z0-9]+}_1.fastq.gz"),
        temp(link_directory + "{sample,[A-Za-z0-9]+}_2.fastq.gz"),
    log:
        logging_folder + "sra_download/{sample}_dump.txt",
    shell:
        """
        fastq-dump --split-3 --gzip --log-level 1 --disable-multithreading --minReadLen 0 --outdir $(dirname {output[0]}) {input[0]} &> {log}
        """


rule sra_convert_to_fastq_single:
    conda:
        "../../envs/sra-tools.yml"
    container:
        singularity_envs["sra-toolkit"]
    input:
        "ncbi/public/sra/{sample}.sra"
    output:
        temp(link_directory + "{sample,[A-Za-z0-9]+}.fastq.gz"),
    log:
        logging_folder + "logs/sra_download/{sample}_dump.txt"
    shell:
        """
        fastq-dump --gzip --outdir $(dirname {output[0]}) --log-level 0 --disable-multithreading --minReadLen 0 {wildcards.sample} &> {log}
        """
